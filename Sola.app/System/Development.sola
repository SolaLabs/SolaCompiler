require: "System/Diagnostics.sola"
require: "System/Objects.sola"

space Development
 use Console: Diagnostics.Console.Write
 use Debug: Diagnostics.Debug.Log
 use Text: Objects.Text
 object Testing
  action Start(release)
   let total, _total: 5
    get
     return _total
    end
    set
     if (value > 0)
      _total: value
     end
    end
   end
   Debug("Initializing " release " testing sequences...")
   Debug("This is a test of the 'for' statement.")
   messages: {"This is the first test!", "This is the second test!", "This is the third test!", "This is the fourth test!"}
   for (tests: 1, tests less| total, 1)
    if (tests?) 
     if (tests less? total)
      Debug(messages[tests])
     end
     Debug(if(tests more| 3: "There have been " tests "tests!" else? "There are " (total - tests) " tests remaining!"))
     switch (tests)
      case 1
       await.try(Statements.Foreach())
      end
      case 2
       await.try(Statements.Repeat())
      end
      case 3
       count: 0
       looping: true
       Debug("This is a test of the 'while' statement....")
       while (looping)
        count: count + 1
        if (count == 1)
         Debug("Skipping a cycle!")
         skip
        end
        else (count == 2)
         Debug("Continuing cycles!")
        end
        else (count == 5)
         looping: false
         Debug("Breaking the loop!")
         break
        end
        Debug(count " cycle(s)!")
       end
      end
      case 4
       Debug("This is a test of the 'try' statement....")
       try
        default
         Debug("Attempting default.")
         if (tests + 1 less? total)
          Debug("Posing argument.")
          argument: "This is the final test!"
         end
        end
        catch
         Debug("Catching argument!")
         Debug.Warn(argument)
        end
        continue
         Debug("Try test completed!")
        end
       end
      end
      case 5
       if (task.try(messages.add("This is the final test!")))
        Debug(messages[5])
       end
      end
     end
    end
   end
   Debug(Text.Normalize(release) " testing sequences completed!")
  end
 end
 object Statements
  action Foreach()
   Debug("This is a test of the 'foreach' statement...")
   Console("What is your favorite color?")
   colors: {"red","orange","yellow","green","blue","indigo","violet"}
   Console.Write(colors)
   response: task.input()
   response: response.case.lower().trim()
   found: false
   switch (response)
    case "cancel"
     Console("Alight!")
     break;
    end
    default
     foreach (color, colors)
      found: if(color is? response)
      await.try(if(found: break else? skip))
     end
    end
   end
   if (!found)
    Console("Please choose from the list.")
    await.return(Foreach())
   end
   else
    Console("Great, your favorite color is " response "!")
    return response
   end
  end
  action Repeat()
   Debug("This is a test of the 'repeat' statement....")
   Console("Pick a number between 1 and 10!")
   response: task.input()
   Console("Okay, let's count to " response "!")
   if (response.type() is? number)
    if (response more? 1 and? response less? 10)
     repeat(i: 0, response)
      await.time(30)
      Console("Count is " i "!")
     end
     return response
    end
    else
     Console("'" response "' is not between 1 and 10!")
     await.return(Repeat())
    end
   end
   else
    Console("Sorry, '" response "' is not a number...")
    await.return(Repeat())
   end
  end
 end
end